---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU1IWUpnbmFSMHBVeVNINTRBWUdhNWd3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TVRFd01EazBOREl6V2hjTk1qTXhNVEV3TURrME5ESXpXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUxqbFM0aEN4T0FJTWtTMjZWcVNHSFVBbE1uZ2Q3S09ZOUVRVXZrcG5TQnZpek1mcDYwNQpKSUwvVEpmdzZ1LzdncEtVL2RzSWc1MFE0WldrTkUwUTJORndzZHJBaWRjZnBBMitTMmxPRjB2MTFuSHY1MnY4CkdtTGQ0V1kzRE4vTFJFUVJDVjVWRjZXOEhxNk9ESnVRR2FwbGYxSE44Z25UL3FCbnZ5cnR4Mzl2RjFmR1VtaEQKSmZHRzI3MTlIT0R1UEwzYWVzUnhmTHhJZmZLWjRQeUVnZEhYRmtIVzMxMjMxNXBLcjRBOS93R1VXZUlEUXlFYQpPdGtuaGVqWmdGekoxTE5NWGdmYWduUUNvZ2ExK0xmeHFaWEFlVzJTdzJDSnljVlRXWnF3WmtKTTNRNHU3SWxrCjJtNjZ0bkRTdnlNQk9nM1grd3ZNWEg0emMrU21iZm5qWEZFQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCWit0a3RWcWlSRnVlWENWNFgrOXVaVG9USXk1NTI3ZS8zaThKTTFzd2wKZWlueWxEOW1kSVVqQjVHNnI3TUlVT3hoTjJ4UnVsRXQ4VTdpMzFrSVlZanNYWllYeTBRSHUyMGp4SnRnc0JsVgpsZDhGSnRBaFkwVmd1WWwvT2V5QnhablVKdStPTy9uOWEvVmdMbkp1cUduOE44OXFEbjdkQnpEMzZrRWwyMUpBCnY4cUhVSWdFZVlDV09JSEJ0WlNZdlZwck8yQytrZ2VMT09EMFJDQzFMOFpsOWI1VFhmdFRYUjI5a2FyaCtZbG0KczZ0ekdManVzUXoxcFJtS0NkdmRwRW5TYTFOZHVQYndUbUlGaVlybEJGSTh1VkxncTExRXdTNENxYUhYVnJUZQo5WjhMQWlxUmFuYTgzbkEvaHNWM0FLU3FocHpoUW9uSk00aXFEYkdDRUxDNwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdU9WTGlFTEU0QWd5UkxicFdwSVlkUUNVeWVCM3NvNWowUkJTK1NtZElHK0xNeCtuCnJUa2tndjlNbC9EcTcvdUNrcFQ5MndpRG5SRGhsYVEwVFJEWTBYQ3gyc0NKMXgra0RiNUxhVTRYUy9YV2NlL24KYS93YVl0M2haamNNMzh0RVJCRUpYbFVYcGJ3ZXJvNE1tNUFacW1WL1VjM3lDZFArb0dlL0t1M0hmMjhYVjhaUwphRU1sOFliYnZYMGM0TzQ4dmRwNnhIRjh2RWg5OHBuZy9JU0IwZGNXUWRiZlhiZlhta3F2Z0QzL0FaUlo0Z05ECklSbzYyU2VGNk5tQVhNblVzMHhlQjlxQ2RBS2lCclg0dC9HcGxjQjViWkxEWUluSnhWTlptckJtUWt6ZERpN3MKaVdUYWJycTJjTksvSXdFNkRkZjdDOHhjZmpOejVLWnQrZU5jVVFJREFRQUJBb0lCQVFDY05Od0RXcVdKd0dMMwp1ckNiWENKZGR3ZzlKZTc2WTJIaEZyR0MzNjFuNGRUd2RDWHRLd0cxeW9xak0xN0pNT3UzZXppYy9DeDFYZlczCnZ1cVEwVkxjWHlGamRwYjlzRFdoaHN1ZlErSmF3bTlTQXlTNURsd2NldWdhdXhlZFd0VnB6QnJtSDIzREQ1TzgKVlRaQmx4U1g2UGdQM0xaSHAxclBtZGJnSmRNTnpSVTRNRjJaYmlmcDlnT09wNi8xZ1Y0OGQvNW12eWJyc2s2SQo4bFZpNmcvZEt2NktVUVg3eHVMckZ3dGpJWTlwN3hNdEFSMTJCc1JzaGR0NVBzR25WV0NReWxNRjFIK0lLdUpoClR5dTF2ZmNoQzZTZXVzQSt3Ui9KRExxS0M1M0t6SHU2OG45VmUxWThmbE1EYTNPTk1uUlZjTlRtN2VuWXdGeDIKN2Y4T2hLNmhBb0dCQU9LYitiTWxWMUhBV1h0OUJYYzcwQklyTW5QdS9LczBrUTJZNWF6WWxOREJwWkNHUkxHdQo4MGFnK2lBNFp1bnhKUm1lRWJzaXNTSzBRbDRPd0Z6OHFSaGxlQVhobnFOOTRjcjF3bmpWblpHRXVMRGxjQ2FCClJLR0xTd3NoaE9WaElJSzg1L0VRRDJOTEhpeE5ENStCM0hyVnR0VnNnb1FsZWVOVlZSbVEvNUliQW9HQkFORGcKVVlpS3ZIb1dMMWtON1BIM1RRMEhYVXUvK2lNZFN6eHdvZ3pDakJGWlRxY0kvYUUydDJlQURsdE5HMUNqR2pvYgpQR0tqbFZKWmNoN0xOK1pIV1kwS2JDRUpBODdaaGxOblJxb1EwTlhBQXc4K1dHWTdqUkg4ZjhPVjlLL0o3d2cwCmJ5UkYxVDZvYXQybkN2WHdwRkNERlFEM3BGRDVOWm5yMmp3ZnlGSURBb0dBUUc1czN2ejlDT2VTQ2NTUWEwaDgKYnM0TmVGMDVSa3laK2EzQmtCVzhxbWFFOXNUV2YxYnBJT25nZEl6VTVpdUVpdllnd0g2cXN0MWlDWEJVVFp3aApVQ2g1cWVKdXdybW1HNWtwQkVab21ObU4wZTVLcHdnV1JZQmZnL2l4MnE1MUdmY3dVNkJuWDZvYUdDcUpDS2RaCjB5czA0eFlKUGgyUnZJdWt1TEk3bUlVQ2dZRUFoL0Exb0FPS3Zub0p2bytOa2J3ODdTbkowaTdUQUY5a1E2V2EKRVd2YjlMNkdyYmJ3T2lkK0hXSDk5ZldzdlVJcEkzL3VRTlB0cm5hQUN3Si9FdU9FcUlJTDlVUUVzbTVuT1lpUgpPTVZRNUl2ZWNlRkZidU42NENYUWtOM2JMVHppMEJndjdROTF4UjJlenpxVHE1UTluQmh6WnZuRWV0NTF3QUw3Ck9QNEdSVGtDZ1lFQTJ4cmhBdjhGUGtvR3Voa0F0TDNSSmo1c2p5emFpcXJFd3ZHTlZWUEpEdituRU5LWi9ZK1QKK0dKWWlXTGVrWkRoOGowR0QzOHNKdTlST3dVZVYxcjhaNFAzUjV1RXJCaXJrRW1jWktTdUlrSUxxK0p4c3lJaApueEE4TWd4VlBaVlZPTlNDT0ZwMnpZRjZLQUFKdWU5dG9lZm1yL2hJS3paOUV4cTkrOTlON29FPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU1IWUpnbmFSMHBVeVNINTRBWUdhNWd3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TVRFd01EazBOREl6V2hjTk1qTXhNVEV3TURrME5ESXpXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUxqbFM0aEN4T0FJTWtTMjZWcVNHSFVBbE1uZ2Q3S09ZOUVRVXZrcG5TQnZpek1mcDYwNQpKSUwvVEpmdzZ1LzdncEtVL2RzSWc1MFE0WldrTkUwUTJORndzZHJBaWRjZnBBMitTMmxPRjB2MTFuSHY1MnY4CkdtTGQ0V1kzRE4vTFJFUVJDVjVWRjZXOEhxNk9ESnVRR2FwbGYxSE44Z25UL3FCbnZ5cnR4Mzl2RjFmR1VtaEQKSmZHRzI3MTlIT0R1UEwzYWVzUnhmTHhJZmZLWjRQeUVnZEhYRmtIVzMxMjMxNXBLcjRBOS93R1VXZUlEUXlFYQpPdGtuaGVqWmdGekoxTE5NWGdmYWduUUNvZ2ExK0xmeHFaWEFlVzJTdzJDSnljVlRXWnF3WmtKTTNRNHU3SWxrCjJtNjZ0bkRTdnlNQk9nM1grd3ZNWEg0emMrU21iZm5qWEZFQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCWit0a3RWcWlSRnVlWENWNFgrOXVaVG9USXk1NTI3ZS8zaThKTTFzd2wKZWlueWxEOW1kSVVqQjVHNnI3TUlVT3hoTjJ4UnVsRXQ4VTdpMzFrSVlZanNYWllYeTBRSHUyMGp4SnRnc0JsVgpsZDhGSnRBaFkwVmd1WWwvT2V5QnhablVKdStPTy9uOWEvVmdMbkp1cUduOE44OXFEbjdkQnpEMzZrRWwyMUpBCnY4cUhVSWdFZVlDV09JSEJ0WlNZdlZwck8yQytrZ2VMT09EMFJDQzFMOFpsOWI1VFhmdFRYUjI5a2FyaCtZbG0KczZ0ekdManVzUXoxcFJtS0NkdmRwRW5TYTFOZHVQYndUbUlGaVlybEJGSTh1VkxncTExRXdTNENxYUhYVnJUZQo5WjhMQWlxUmFuYTgzbkEvaHNWM0FLU3FocHpoUW9uSk00aXFEYkdDRUxDNwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUpMbU1jRVI3aEVrV3V4Tjk3aXBSRDB3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJeU1URXhNREE1TkRReU5Gb1hEVEl6TVRFeE1EQTVORFF5TkZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeDNzS2haL3crUmxsSi9RejhkK2FWbENjWFliNlVIMFdQNjJFbllUUApIRE9KVWxWNzRZVTA3MlpBaWdkbVIycWs0SkdoenVpem1ZMENJQlRRbys3cVJMRUdNcU9VdUFjYnlqYXgvcW1EClNjSExSZ0JubFphZTdVUU9QeHBCSUt0MERhNStZaGEwTDFRWXVpWk5lc2I2MDNjRnVvR0tVdkJjT1BPUHBBZ0YKVUtncHROS1F0U2ROOURHSGNUd1prVThwRDJsa3NaNjhhUFovbUo3NFlheTVmVHlsaHNBT0wyaWY2MnY0c1A4WgpTTmtHQVB2bWpOTDQrcXUwMlFlL1lUTUkxcGMyd3puZHR6dGljNnE4eUdnak42YXc5MlhsU0ttb2NCend5b0JaCmxnd1RTdHN4UEpka1Y2R2RNVmZxYWEyWVpjMjdKM3pPZ2ZtTW40eGVjL1lLNXdJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkVqS1dQNVJTRnpCZHJEQnRvdmNUR0pPVjIKZXJ1UCtOemVoR3ZLVk56bGdUeHhzU3N1YUZYdTVJM20xNkQ3dHBmR2d3Y2t5eGVtcEJaZFBsb3ZjZTA1QXBTOQpiVzZGTmNpMHo1bm42WUJ5aHhGNnlUNlJzU2dTSVNQMTVkSmt5UVJxWUd2LzZnQW50MzhJZml1cU1FVTkyTjI5CmZoZkhVbDdrcllyMWZNMStQdER4RU9aYTlTeTRDUGhsN3ZDQ04wSm16MStEZEZZUllVUmVmRm5uQ0pWTjlBTnkKN2RJa3VwOUp2UjFuNjdMTG9UTzR4aUpXWmlLMUh2N2VPU2JLa3BhMVZLY053d3lpSHJnczBHYXhmdXhjNlNSVQpHYVplNXdZdXhKbzVLTTlHNkMwYWg0blVhWHRIZDBVckpUTUNsVXQvVE1QbUlaNlpGc1BpUDB5RDkzY1cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeDNzS2haL3crUmxsSi9RejhkK2FWbENjWFliNlVIMFdQNjJFbllUUEhET0pVbFY3CjRZVTA3MlpBaWdkbVIycWs0SkdoenVpem1ZMENJQlRRbys3cVJMRUdNcU9VdUFjYnlqYXgvcW1EU2NITFJnQm4KbFphZTdVUU9QeHBCSUt0MERhNStZaGEwTDFRWXVpWk5lc2I2MDNjRnVvR0tVdkJjT1BPUHBBZ0ZVS2dwdE5LUQp0U2ROOURHSGNUd1prVThwRDJsa3NaNjhhUFovbUo3NFlheTVmVHlsaHNBT0wyaWY2MnY0c1A4WlNOa0dBUHZtCmpOTDQrcXUwMlFlL1lUTUkxcGMyd3puZHR6dGljNnE4eUdnak42YXc5MlhsU0ttb2NCend5b0JabGd3VFN0c3gKUEpka1Y2R2RNVmZxYWEyWVpjMjdKM3pPZ2ZtTW40eGVjL1lLNXdJREFRQUJBb0lCQVFDUi9HLzAzdHBoMHIzLwpBVzdLZ3BQV3UyUFQ1cVptSlVVVkVRM09vWlZZMURhWk5NcFdmMEFBTzlyYnFSS25EVnJncG5PK2t2cHRVNDdNCm42OFphZzIwZThGSGFnTzZzaWthVWZEdHFHeldtNmNCOGVYY3ljQkJiOTdsTzNlU1N5ZkJvNFFHa1FzSTRBakEKb3F0dFFSWHJrRjEyNHJxeWZBbGgvSTJRdy9YdjBmYTJNVEE2ajVjV2NDVmJCenZ3TG9GSkVCb3FLb2Q5RGYwTwptd05RUFNJWnp1VnZRb3ozejJXeVo5UjJsV2h4MlBPdmpqbDdpbktBWDJEbFhKM1JyNkVTV3czek9QaEdTYjd6CkUwUG01OVN1RjlEdnFsT0lBd040YVFZKzlWWWFxVWNHdzkrNjNFQk8vTURkNEZDYlMvTGd6K08rMGRXUFBHL3EKeEZXb3RXaXhBb0dCQU5pNG1aNVRudlZRdXEyTHlNak5MV0xhcURyWkpRQUZIUXFtcVdCMjdBYWFjSkEyczN1dgo4Tm5BdjRoUURGRXRaUzVmUy8wcXhRVXY4a2lENjh3NENTdlNRNitHTS9ac1ZwWFpReVRBVFRZalVYZDd1QVI3CktvOExlaDJvV2JRU1hHd0UydHdTZHZJL2pFY3dseUx6Sm9Gc1dEek9ycGV4TzZ3SWkrMXdYekk5QW9HQkFPdWkKaFJ5TWplWXd3T2ZTTUh2dHd6VEt1NGYzZU8wcXVCQi84dDhuODJkZGVHZXhGZ1M5dVNQMWxyaWRjZWY1OThkUgpPckY5UnNQYk1sZ1pZbTVzdlc2Z0pucEcvUndncnlrc1lzQzVhNW1rb3ZIUUtvRDFyM1hTUkZCOXpKQnhGU3pxClBtMWNjd2huWDFqcDlKSit3VmZLS2dHK1BpUUZmNGRKTzI0TkszZnpBb0dBTWlIQnAxWkFsdzZ0b0NlTnNxV0QKc2pKU2FBcUMvSll5T1p5RDRjU2dwSVpsTTNiejNkQzlMaUhnTEhBWDZVOU84SU1xMk0xajllYzViSHpYdHMzZgprVHQ2WE1mMmpUSlNkU2RrMk1PREdOcmlwWGtCQUVoZGQrbDN2aFNMYTVRenZPa0NsNVhOM2d2RkwxS1dJNGVMCmlMUy9WSkdhNFl3bCtZMmdrTFJGMFNFQ2dZRUFsM2o4MnJKYjBYckx0dm8rSXB4Z0hRS3A5S2lYK3RXNFJ4c0kKOUgwSkVneGJCMFVtSTF3V3RNLzkyS1dWZ0lzR3hnRW9tc291Z0Y3YkNSa2dWbDNlbEV1dEVIT3I1N1gzQTUrOQp4NmdxVERVeWJnSGtJTXhPdzQyc1RwWGZ0NGFLRnpwcGNRRzZETS91MGdocktQVUVzcnVKcjE4dE1SaTd0eXJUCllsWmkrQk1DZ1lFQXRHSk4ybENIdkpkVlhrZnI1VS82NnVxR29QTEhuNHI5RHNRTnV1UXZsM1ZBNm10cnNRZisKNUVOb3pPQ29ISU5qN2ludW51MjFWc2tLUkZVUUZrVUoxV05VdFpqY1BSbWRBbWNFakFuVEh6TDV6bGkyN0hLbgpMWmVndGVLaVU4cUFxMFNrZm5jNk5aaHQyRVJsVFZycStUMGxQWU1LS3p2S3pLSkl2ZEIwa3NrPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUpMbU1jRVI3aEVrV3V4Tjk3aXBSRDB3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJeU1URXhNREE1TkRReU5Gb1hEVEl6TVRFeE1EQTVORFF5TkZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeDNzS2haL3crUmxsSi9RejhkK2FWbENjWFliNlVIMFdQNjJFbllUUApIRE9KVWxWNzRZVTA3MlpBaWdkbVIycWs0SkdoenVpem1ZMENJQlRRbys3cVJMRUdNcU9VdUFjYnlqYXgvcW1EClNjSExSZ0JubFphZTdVUU9QeHBCSUt0MERhNStZaGEwTDFRWXVpWk5lc2I2MDNjRnVvR0tVdkJjT1BPUHBBZ0YKVUtncHROS1F0U2ROOURHSGNUd1prVThwRDJsa3NaNjhhUFovbUo3NFlheTVmVHlsaHNBT0wyaWY2MnY0c1A4WgpTTmtHQVB2bWpOTDQrcXUwMlFlL1lUTUkxcGMyd3puZHR6dGljNnE4eUdnak42YXc5MlhsU0ttb2NCend5b0JaCmxnd1RTdHN4UEpka1Y2R2RNVmZxYWEyWVpjMjdKM3pPZ2ZtTW40eGVjL1lLNXdJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkVqS1dQNVJTRnpCZHJEQnRvdmNUR0pPVjIKZXJ1UCtOemVoR3ZLVk56bGdUeHhzU3N1YUZYdTVJM20xNkQ3dHBmR2d3Y2t5eGVtcEJaZFBsb3ZjZTA1QXBTOQpiVzZGTmNpMHo1bm42WUJ5aHhGNnlUNlJzU2dTSVNQMTVkSmt5UVJxWUd2LzZnQW50MzhJZml1cU1FVTkyTjI5CmZoZkhVbDdrcllyMWZNMStQdER4RU9aYTlTeTRDUGhsN3ZDQ04wSm16MStEZEZZUllVUmVmRm5uQ0pWTjlBTnkKN2RJa3VwOUp2UjFuNjdMTG9UTzR4aUpXWmlLMUh2N2VPU2JLa3BhMVZLY053d3lpSHJnczBHYXhmdXhjNlNSVQpHYVplNXdZdXhKbzVLTTlHNkMwYWg0blVhWHRIZDBVckpUTUNsVXQvVE1QbUlaNlpGc1BpUDB5RDkzY1cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRQlNtV00rNUpGV0dKd29USm5PVS9CakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRFeE1EQTVORFF5TTFvWERUSXpNVEV4TURBNU5EUXlNMW93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMT3hKTi9tSGtPYytWZzR6dCswa1pLQkNMRU5abDlKYnBhMzhnWWZPbWNlajBIKwowbllhb1BVVk52emxiMU16c0REMFMyOTlmYTdmSGVMK1ZuQytYOWUxbWhPYmczZ1ovYjdxSEVtdmJ4cE0xdGwrCjhQN0U5S3AxV05Bc0owYkNkMlZNYWhsQnNVVERCVkFta3NOQ0ZXRlJYYm9kUE5SVDdPTTBnM29ZNWthN1lTci8KODdNRXlsR1pEUDNKbGM0dk9WdkhKVXRSU1dRNHlHVmpMRkpHT3Vmc1h5Mm9wVzEwdlh2aWFyQ1p0cCtaM0drRQoyZHUzQmpyVWZndmJIbHlMQUZNdlV5eU5CajRuWHlyWm5ndG1Qb2h0SnRFamNLejV4QjR6UVpyQW1VN1JuQWJtClRjWmNiV0Q2Z0hiaHFGdDRkUzRXOGUrYW5RTFVKaHRmclVIa0tsVUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREp4c3R3R0RmYitjVDBQcStpOTBidkNYTFlLbEdxUi85WTAKWDZxdHc2MlpZMnJSQmNMM3VPUXBYZFM3Mk9NQmRtSG5lZmh4TCtwUFluSEdINmxJWmxzM3hrNVlFTUJOVU81RAp5dkJsREkzelRXTmtsY3VVMnJydE83bVhWNFVPOHgybUhpd0xFTmRESklONmtwQ1F0N216UkJRSWVjYlM3d1lwCm1USGIwZ1AvcjErQkRzZXUvWS95a2RYM3ZRY2ZMMjkzMmw0NUlBQk8xb2l3UnJtMTRMZlIwUCswTGFsYSttMHIKQ3B5dFBiS0QxMCtXSWFYUDAxRmhEQnYvL011QWlhMnpWVzNXdC9qK1IxbVRWRzZXQ0hVWnlyZTdUaHpYSmg0SwpRWWRUV2doYXdTcTFKN21rVHVXSnAyZmY4bVBzUkFXbVpESHU2QlIyUVpXSkJiajFJYWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBczdFazMrWWVRNXo1V0RqTzM3U1Jrb0VJc1ExbVgwbHVscmZ5Qmg4Nlp4NlBRZjdTCmRocWc5UlUyL09WdlV6T3dNUFJMYjMxOXJ0OGQ0djVXY0w1ZjE3V2FFNXVEZUJuOXZ1b2NTYTl2R2t6VzJYN3cKL3NUMHFuVlkwQ3duUnNKM1pVeHFHVUd4Uk1NRlVDYVN3MElWWVZGZHVoMDgxRlBzNHpTRGVoam1ScnRoS3Yvegpzd1RLVVprTS9jbVZ6aTg1VzhjbFMxRkpaRGpJWldNc1VrWTY1K3hmTGFpbGJYUzllK0pxc0ptMm41bmNhUVRaCjI3Y0dPdFIrQzlzZVhJc0FVeTlUTEkwR1BpZGZLdG1lQzJZK2lHMG0wU053clBuRUhqTkJtc0NaVHRHY0J1Wk4KeGx4dFlQcUFkdUdvVzNoMUxoYng3NXFkQXRRbUcxK3RRZVFxVlFJREFRQUJBb0lCQUYwRG9WYlV3MjIwWDgydQora2NLTFNCczhwYlRuTjVPSUpTYit3ZjRPajhPcnBFMjJyS1A3aWx2SmR1YTJCbDFkQXFqS2prMytFc0E2M09JCnZDMzRIWnlIUUk1TnZhdjVxRU9lNDYyd3hnNFRJRlBOUmVwYkFWc0xDMElXMk8zajAvSDNzQ1FLd1R3YXh6RksKQmtaVWVzUzVYWTd0ZTROZFBnNE9MTkNTK3dBNU9CMHplRk5RREcvVDJOdGdraFFjL2Yvczl0YmVhNDRBeDNGUwpwZkdXOVV6cW1yQS80SG9SY0VuSmhEazVxNTBEellkT01CNkU4RW04T0crTzcyWXlZRnduRmNRclZuLzFieS81CjMzY01nVEFVZWxoQXBvcFVTaW94TlJ0YlFuUk1BcS9PVUhRSkduQTVSTURUK0tzcUF4VXJ0NDlvNXNKcjlXSmUKdzQrc3lyRUNnWUVBeXZ1ZW8wZFpESllWTER0YXNWeURxZ3ZDblhSeHZ3ZXd0Q00yN3BkNHAyb1ZidWNRY2VySwpBZU1DZ3lmcDZQelJTcU11YnREYUpiUlI0SlRSejN2NlVQTHR1SzBIOE5DMFoyMkVVaU1STVF4U0JzeVRYQXp4CjBFb2JIdDBYaXRoMU5mTzFBOWd5WENaU0Zza3lGTDFCNUV4SG9jSkpqRitQT0ZhMkRxQWExWjhDZ1lFQTRxQXYKWUY0VnNWdUdPaXgyZFRUcUhoeUhtbzR0alB2L1BUUXVhNFRMaUN4UGNNaFBrZ0ZlbmtzUzdxcklHSkMwL1lLZQpFUjJaaXdWZjJ3dFhNWThWQnd0d3RUOXRzMFZWWkl2YURnMGd6T29XaE1VdWdFMmF0WEtDc2NpczJKMk5oSURCCnlITFlxMmViRUVqVTl2YTUwdmFsaUE1blUwTHRreE1WR0NPTXM0c0NnWUVBdDhWUy9MU3QxSTFVb2ZVaXlRemYKVDJiU1RjZU02OHpFbUhLQlcwWGJ3SVowM1RGcFhCbWJ4bFdHZ3NQeUxEUW9NQkRKQ3g4ZlFaK2R1VnhERUR4SQpobDFLQ0Ridng0RE10QThkQzFnZ1NtM0RIZEM5WVV0KzZuc05Uc1lRZUc0OHdCbml1cFpVRWNYSDhFVTdpRGRJCm5xN0k4NVI1RGhPK0VOM0Fla0ZOeWpVQ2dZQkFCeW5iZkRsOHhuTUI5Slh6UDJQMTVmR2FCUmx4ZjdENVJjam4KcjdraFhBT0Z4ZEpWV2ZXMW0xaFovZjVTa20vUVFCc1FrdUJTbXM0ZVFQSDltb05DWGtVVnNEbjZNRmlUODc5RAp3UW5IVzB2SmJ6eFlHNVRlTnVBZUFxaHkrdkNFd3l2OHloWFZONHhqNlcvaDVvdFJ3MFc1VHZoNldhcHRwektLCmcyQzVTUUtCZ0FNdEViUmsveUROaUczWXlFSlg1K0pQM1J1QXJlWGJOWWQ5RjVzeUY5V2NaUmZ6eFBqTG8vMUUKOCtRUlYrdUVYVDg1RWZPR1BNeDZ0UE0wVFY1ZkhJamxKYlNXR1lNV0NqT1hLL2tZNnJuOGw4MklnOVc1STZYRwp2Wnpmck5zZFBuN3NZV0ZISjV6NjhHNUdMUTU4MzJSVlJOcXF2K0FoKytMdFo4cXVJSzBTCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRQlNtV00rNUpGV0dKd29USm5PVS9CakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRFeE1EQTVORFF5TTFvWERUSXpNVEV4TURBNU5EUXlNMW93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMT3hKTi9tSGtPYytWZzR6dCswa1pLQkNMRU5abDlKYnBhMzhnWWZPbWNlajBIKwowbllhb1BVVk52emxiMU16c0REMFMyOTlmYTdmSGVMK1ZuQytYOWUxbWhPYmczZ1ovYjdxSEVtdmJ4cE0xdGwrCjhQN0U5S3AxV05Bc0owYkNkMlZNYWhsQnNVVERCVkFta3NOQ0ZXRlJYYm9kUE5SVDdPTTBnM29ZNWthN1lTci8KODdNRXlsR1pEUDNKbGM0dk9WdkhKVXRSU1dRNHlHVmpMRkpHT3Vmc1h5Mm9wVzEwdlh2aWFyQ1p0cCtaM0drRQoyZHUzQmpyVWZndmJIbHlMQUZNdlV5eU5CajRuWHlyWm5ndG1Qb2h0SnRFamNLejV4QjR6UVpyQW1VN1JuQWJtClRjWmNiV0Q2Z0hiaHFGdDRkUzRXOGUrYW5RTFVKaHRmclVIa0tsVUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREp4c3R3R0RmYitjVDBQcStpOTBidkNYTFlLbEdxUi85WTAKWDZxdHc2MlpZMnJSQmNMM3VPUXBYZFM3Mk9NQmRtSG5lZmh4TCtwUFluSEdINmxJWmxzM3hrNVlFTUJOVU81RAp5dkJsREkzelRXTmtsY3VVMnJydE83bVhWNFVPOHgybUhpd0xFTmRESklONmtwQ1F0N216UkJRSWVjYlM3d1lwCm1USGIwZ1AvcjErQkRzZXUvWS95a2RYM3ZRY2ZMMjkzMmw0NUlBQk8xb2l3UnJtMTRMZlIwUCswTGFsYSttMHIKQ3B5dFBiS0QxMCtXSWFYUDAxRmhEQnYvL011QWlhMnpWVzNXdC9qK1IxbVRWRzZXQ0hVWnlyZTdUaHpYSmg0SwpRWWRUV2doYXdTcTFKN21rVHVXSnAyZmY4bVBzUkFXbVpESHU2QlIyUVpXSkJiajFJYWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.2
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.2
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjExMTAwOTQ0MTNaFw0yMzExMTAwOTQ0MzNaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAE9qAMLFBLZVAxAezYKKdxdQ+JbPAXwHHSerVHvz0G5rS4bI7KiX5bn2K+Nir7
            GHZXUF9AOWIAcPe8ctcTgzC30qNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBT3U0MLaWSf4cOA2od+3/ZhbNbRpjAKBggqhkjOPQQDAgNHADBEAiBoynzsZAub
            svfN35vstp/NmQ7Ly+lMG5oW7fd6GTfxHAIgDZHQVwhKaLQtT3frPCeH1Bh7GtFn
            UzhsLg2lMVWLpPU=
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjExMTAwOTQ0MTNaFw0yMzExMTAwOTQ0MzNaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAE9qAMLFBLZVAxAezYKKdxdQ+JbPAXwHHSerVHvz0G5rS4bI7KiX5bn2K+Nir7
      GHZXUF9AOWIAcPe8ctcTgzC30qNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBT3U0MLaWSf4cOA2od+3/ZhbNbRpjAKBggqhkjOPQQDAgNHADBEAiBoynzsZAub
      svfN35vstp/NmQ7Ly+lMG5oW7fd6GTfxHAIgDZHQVwhKaLQtT3frPCeH1Bh7GtFn
      UzhsLg2lMVWLpPU=
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.2
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV4TVRBd09UUTBNVE5hRncweU16RXhNVEF3T1RRME16TmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUU5cUFNTEZCTFpWQXhBZXpZS0tkeGRRK0piUEFYd0hIU2VyVkh2ejBHNXJTNGJJN0tpWDVibjJLK05pcjcKR0haWFVGOUFPV0lBY1BlOGN0Y1RnekMzMHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVDNVME1MYVdTZjRjT0Eyb2QrMy9aaGJOYlJwakFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUJveW56c1pBdWIKc3ZmTjM1dnN0cC9ObVE3THkrbE1HNW9XN2ZkNkdUZnhIQUlnRFpIUVZ3aEthTFF0VDNmclBDZUgxQmg3R3RGbgpVemhzTGcybE1WV0xwUFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVOdGI0cWkxWHZ6SzNVc0FkL2srWE5VL3RmcDkrckd0MGl0aGh2RW9VbVdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFOXFBTUxGQkxaVkF4QWV6WUtLZHhkUStKYlBBWHdISFNlclZIdnowRzVyUzRiSTdLaVg1YgpuMksrTmlyN0dIWlhVRjlBT1dJQWNQZThjdGNUZ3pDMzBnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjExMTAwOTQ0MTNaFw0yMzExMTAwOTQ0MzNaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAE9qAMLFBLZVAxAezYKKdxdQ+JbPAXwHHSerVHvz0G5rS4bI7KiX5bn2K+Nir7
    GHZXUF9AOWIAcPe8ctcTgzC30qNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBT3U0MLaWSf4cOA2od+3/ZhbNbRpjAKBggqhkjOPQQDAgNHADBEAiBoynzsZAub
    svfN35vstp/NmQ7Ly+lMG5oW7fd6GTfxHAIgDZHQVwhKaLQtT3frPCeH1Bh7GtFn
    UzhsLg2lMVWLpPU=
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 1d58a9d0a1903aa40901cf984bb8599db3e64e40588f47bc8ded0680847780e1
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 1d58a9d0a1903aa40901cf984bb8599db3e64e40588f47bc8ded0680847780e1
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  concurrencyPolicy: Replace
  schedule: "54 09 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.2
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.2
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 1d58a9d0a1903aa40901cf984bb8599db3e64e40588f47bc8ded0680847780e1
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaHpDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV4TVRBd09UUTBNVE5hRncweU16RXhNVEF3T1RRME16TmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFOXFBTUxGQkxaVkF4QWV6WUtLZHhkUStKYlBBWHdISFNlclZIdnowRzVyUzRiSTdLaVg1Ym4ySytOaXI3CiAgICAgICAgR0haWFVGOUFPV0lBY1BlOGN0Y1RnekMzMHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlQzVTBNTGFXU2Y0Y09BMm9kKzMvWmhiTmJScGpBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCb3luenNaQXViCiAgICAgICAgc3ZmTjM1dnN0cC9ObVE3THkrbE1HNW9XN2ZkNkdUZnhIQUlnRFpIUVZ3aEthTFF0VDNmclBDZUgxQmg3R3RGbgogICAgICAgIFV6aHNMZzJsTVZXTHBQVT0KICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUVOdGI0cWkxWHZ6SzNVc0FkL2srWE5VL3RmcDkrckd0MGl0aGh2RW9VbVdvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUU5cUFNTEZCTFpWQXhBZXpZS0tkeGRRK0piUEFYd0hIU2VyVkh2ejBHNXJTNGJJN0tpWDViCiAgICAgICAgbjJLK05pcjdHSFpYVUY5QU9XSUFjUGU4Y3RjVGd6QzMwZz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU1qRXhNVEF3T1RRME1UTmFGdzB5TXpFeE1UQXdPVFEwTXpOYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUU5cUFNTEZCTFpWQXhBZXpZS0tkeGRRK0piUEFYd0hIU2VyVkh2ejBHNXJTNGJJN0tpWDVibjJLK05pcjcKICBHSFpYVUY5QU9XSUFjUGU4Y3RjVGd6QzMwcU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCVDNVME1MYVdTZjRjT0Eyb2QrMy9aaGJOYlJwakFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUJveW56c1pBdWIKICBzdmZOMzV2c3RwL05tUTdMeStsTUc1b1c3ZmQ2R1RmeEhBSWdEWkhRVndoS2FMUXRUM2ZyUENlSDFCaDdHdEZuCiAgVXpoc0xnMmxNVldMcFBVPQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
